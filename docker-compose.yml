version: "3.7"

x-app: &app
  build:
    context: .
    dockerfile: Dockerfile
    args:
      pg_major: '13'
      node_major: '14'
      node_version: ${NODE_PACKAGE_VERSION:-14.15.0}
      yarn_version: '1.22.19'
      bundler_version: '2.3.1'
      gem_home: /bundle
  environment: &env
    NODE_ENV: development
    WEBPACKER_DEV_SERVER_HOST: webpacker
  image: gallery:latest
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/bundle
    - node_modules:/app/node_modules
    - packs:/app/public/packs
  environment:
    <<: *env
    DATABASE_HOST: ${DATABASE_HOST}
    DATABASE_USERNAME: ${DATABASE_USERNAME}
    DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    DATABASE_NAME: ${DATABASE_NAME}
    REDIS_URL: redis://redis:6379/
    ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST:-elasticsearch}
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-0}
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    SIDEKIQ_LOG_TO_STDOUT: "true"
    RAILS_LOG_TO_STDOUT: "true"
  depends_on:
    - redis
    - postgres

services:
  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025:8025

  postgres:
    image: ${POSTGRES_IMAGE:-postgres}:${POSTGRES_VERSION:-13.2-alpine}
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:${PGDATA:-/var/lib/postgresql/data}
      - ./db/dumps:/docker-entrypoint-initdb.d/dumps
      - ./log:/root/log:cached
    environment:
      PGDATA: ${PGDATA:-/var/lib/postgresql/data}
      POSTGRES_USER: ${DATABASE_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
      PGPORT: ${DATABASE_PORT:-5432}
      PSQL_HISTFILE: /root/log/.psql_history
    ports:
      - '${DATABASE_PORT:-5432}:${DATABASE_PORT:-5432}'

  redis:
    image: redis:7.0.4
    volumes:
      - redis:/data
    ports:
      - '${REDIS_SERVER_PORT:-6379}:6379'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION:-5.6.4}
    command:
      - "bin/elasticsearch"
      - "-Expack.security.enabled=false"
      - "-Ediscovery.type=single-node"
      - "-Ebootstrap.memory_lock=true"
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - '${ELASTICSEARCH_PORT:-9200}:9200'

  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3001:3001'

  rails:
    <<: *backend
    entrypoint: /app/docker-compose-entrypoint.sh
    command: [ 'rails', 'server', '-b', '0.0.0.0', '-p', '3000']
    ports:
      - '${RAILS_PORT:-3000}:3000'

  webpacker:
    <<: *app
    command: ./bin/webpack-dev-server
    ports:
      - '${WEBPACK_DEV_SERVER_PORT:-3035}:3035'
      - '${WEBPACK_BUNDLE_ANALYZER_PORT:-8888}:8888'
    volumes:
      - .:/app:cached
      - bundle:/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      <<: *env
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0
      WEBPACK_BUNDLE_ANALYZER_HOST: 0.0.0.0

volumes:
  redis:
  bundle:
  node_modules:
  rails_cache:
  packs:
  postgres:
